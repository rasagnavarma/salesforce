VFP


<apex:page Controller="StudentController">
    <html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
        <head>
            <apex:includeScript value="/soap/ajax/36.0/connection.js"/>
            <apex:slds />
            <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js">
            </script>
            <!--to display data in table and for loop for dynamic retrive data-->
            <script>
            
            function display(){
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.StudentController.getdisplay}',
                    function(result, event){
                        var tab= '';
                        
                        for(i=0;i<result.length;i++){
                            
                            tab+= '<tr><td id="raga-'+result[i].Id+'">'+result[i].Name+'</td><td>'+result[i].type__c+'</td><td>'
                            +' <div class="slds-dropdown-trigger  slds-is-open" id= "editanddel">'
                            +'   <button class="slds-button slds-button_icon slds-button_icon-border-filled" aria-haspopup="true" title="Show More">'
                            +'     <svg class="slds-button__icon" aria-hidden="true">'
                            +'       <use xlink:href="{!URLFOR($Asset.SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#down')}">'
                            +'</use>'
                            +'     </svg>'
                            +'   <span class="slds-assistive-text"></span>'
                            +' </button>'
                            +'<div class="slds-dropdown slds-dropdown_left">'
                            +'  <ul class="slds-dropdown__list" role="menu">'
                            +'    <li class="slds-dropdown__item" role="presentation">'
                            +'      <a href="javascript:void(0);" role="menuitem" tabindex="0">'
                            +'        <span class="slds-truncate" onclick=editModal("'+result[i].Name+'","'+result[i].type__c+'","'+result[i].Id+'") title="Menu Item One">Edit</span>'
                            +'      </a>'
                            +'    </li>'
                            +'  <li class="slds-dropdown__item" role="presentation">'
                            +'    <a href="javascript:void(0);" role="menuitem" tabindex="-1">'
                            +'      <span class="slds-truncate" id="delbtn" onclick="shoedelModal(\''+result[i].Id+'\')" title="Menu Item Two">Delete</span>'
                            +'    </a>'
                            +'  </li>'
                            
                            +'</ul>'
                            +'</div>'
                            +'</div></td></tr>';
                            
                        }
                        $('#Print').html(tab);
                        
                    }, 
                    {escape: true}
                );
                
            }
            
            //open popup and onclick function what to do
            
            $(document).ready(function(){
                
                getPickListVal();
                display();
            });
            // on clicking new this will help to show save button and hide update button
            
            function popModal(){
                $("#ModalId").show();
                $("#updateBtn").hide();
                $("#name").show();
                
            }
            // on clicking editbutton this will help to hide save button and show update button
            
            function editModal(names,types,id){
                $("#updateBtn").show();
                $("#name").hide();
                $('#text-input-id-1').val(names);
                $('#select-01').val(types);
                $("#ModalId").show();
                $("#updateBtn").attr('onClick','updateValues("'+id+'")');
                console.log(names,types,id);
            }
            
            jQuery(document).mouseup(function(e){
                $("#updateBtn").click(function(){
                    $("#ModalId").hide();
                    display();
                    
                });
            });
                        
            
            
            
            
            // for sending data from modal to org
            function sendData(){
                var stor=$("#text-input-id-1").val();
                var typestr=$("#select-01").val();
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.StudentController.getsendingData}',
                    stor,typestr,                    
                    function(result, event){
                        
                        if(result==true){
                            $("#ModalId").hide();
                            display();
                            $('#sucessalert').show();
                            $('#toastId').addClass('slds-theme_success');
                            $('#tostMsgId').html('succesfully added');
                            setTimeout(function(){
                                $('#sucessalert').hide();
                            }, 5000);
                            
                            
                            
                            
                        }else{
                            $('#sucessalert').show();
                            $('#toastId').addClass('slds-theme_error');
                            $('#tostMsgId').html('Uncessfull of records adding please check It');
                            setTimeout(function(){
                                $('#sucessalert').hide();
                            }, 5000);
                        }
                    });
            };
            //this is for geting the picklist values from org and apex has loop
            function getPickListVal() {                
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.StudentController.getList}',
                    function(result, event)
                    {
                        if(event.status)
                        {
                            console.log(result);
                            var ident='<option value="None">None</option>';
                            for (i = 0; i < result.length; i++) { 
                                console.log(result[i]);
                                ident+='<option value="'+result[i]+'">'+result[i]+'</option>';
                            }
                            $('#select-01').html(ident);
                        }
                    },
                    {escape: true}
                );
            }
            
            //onclick for delete function
            
            function deletecontact(id) {    
                
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.StudentController.getdeleteFun}',id,
                    function(result, event)
                    {
                        display();
                        $("#deleteModal").hide();
                        
                    },
                    {escape: true}
                );
            }
            
            // on clicking cancel this will trigger
            function canceling(){
                $("#ModalId").hide();
                $('#text-input-id-1').val('')
                $('#select-01').val('None');
                
            }
            //this is for alerts if name and validations
            function clicking(){
                var stor=$("#text-input-id-1").val();
                var typestr=$("#select-01").val();
                if(stor==''){
                    $('#sucessalert').show();
                    $('#toastId').addClass('slds-theme_error');
                    $('#tostMsgId').html('Fill the name');
                    setTimeout(function(){
                        $('#sucessalert').hide();
                    }, 5000);
                    
                    
                    
                }
                else if(typestr=='None'){
                    $('#sucessalert').show();
                    $('#toastId').addClass('slds-theme_error');
                    $('#tostMsgId').html('Fill the type');
                    setTimeout(function(){
                        $('#sucessalert').hide();
                    }, 5000);
                }
                    else{
                        sendData();
                        $('#text-input-id-1').val('')
                        $('#select-01').val('None');
                        canceling(); 
                        
                    }
                
            } 
            function updateValues(id){
                var namess=$("#text-input-id-1").val();
                var typess=$("#select-01").val();
                //var ids=$("#text-input-id-1").Id;
                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.StudentController.getupdateFun}',
                    namess,typess,id, 
                    function(result, event){
                        });
            };
            
            
            
            function hidedelModal(){
                $("#deleteModal").hide();
            }
            function shoedelModal(id){
                $("#deleteModal").show();
                $('#deleteBtn').attr('onClick','deletecontact("'+id+'")');
            }
            //close alert by clicking x button
            function closealert(){
                $('#sucessalert').hide();
            }
            //close model by clicking x button
            function closeBtnModal(){
                $('#ModalId').hide();
            }
            </script>
            
        </head>
        <body>
            
            <!--success alert-->
            
            <div class="slds-notify_container " style="height:4rem; display:none;" id="sucessalert">
                <div class="slds-notify slds-notify_toast " role="status" id="toastId">
                    <span class="slds-assistive-text"></span>
                    <span class="slds-icon_container slds-icon-utility-success slds-m-right_small slds-no-flex slds-align-top"  title="Description of icon when needed">
                        <svg class="slds-icon slds-icon_small" aria-hidden="true">
                            <use xlink:href="{!URLFOR($Asset.SLDS, '/assets/icons/action-sprite/svg/symbols.svg#approval')}"></use>
                        </svg>
                    </span>
                    <div class="slds-notify__content" id="tostMsgId">
                        
                        
                    </div>
                    <div class="slds-notify__close">
                        <button class="slds-button slds-button_icon slds-button_icon-inverse" onclick="closealert()" title="Close" >
                            <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                <use xlink:href="{!URLFOR($Asset.SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                            </svg>
                            <span class="slds-assistive-text">Close</span>
                        </button>
                    </div>
                </div>
            </div>
            
            
            
            
            
            <!--Page header this is for the header -->
            <div class="slds-page-header">
                <div class="slds-page-header__row">
                    <div class="slds-page-header__col-title">
                        <div class="slds-media">
                            <div class="slds-media__figure">
                                <span class="slds-icon_container slds-icon-standard-opportunity">
                                    <svg class="slds-icon slds-page-header__icon" aria-hidden="true">
                                        <use xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/standard-sprite/svg/symbols.svg#account')}"></use>
                                    </svg>
                                </span>
                            </div>
                            <div class="slds-media__body">
                                <div class="slds-page-header__name">
                                    <div class="slds-page-header__name-title">
                                        <h1>
                                            <h1>candidate</h1>
                                            
                                        </h1>
                                    </div>
                                    <div class="slds-page-header__name-switcher">
                                        <div class="slds-dropdown-trigger slds-dropdown-trigger_click">
                                            <button class="slds-button slds-button_icon slds-button_icon-small" aria-haspopup="true" title="Switch list view">
                                                <svg class="slds-button__icon slds-icon_x-small" aria-hidden="true">
                                                    <use xlink:href="{!URLFOR($Asset.SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#down')}"></use>
                                                </svg>
                                                <span class="slds-assistive-text">Switch list view</span>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="slds-page-header__col-actions">
                        
                        <div class="slds-page-header__control">
                            <ul class="slds-button-group-list">
                                <li>
                                    <button onclick="popModal()" class="slds-button slds-button_neutral" >New</button>
                                </li>
                                <li>
                                    
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <div class="slds-page-header__row">
                <div class="slds-page-header__col-meta">
                    <p class="slds-page-header__meta-text"></p>
                </div>
                <div class="slds-page-header__col-controls">
                    <div class="slds-page-header__controls">
                        <div class="slds-page-header__control">
                            <div class="slds-dropdown-trigger slds-dropdown-trigger_click">
                            </div>
                        </div>
                        <div class="slds-page-header__control">
                            <div class="slds-dropdown-trigger slds-dropdown-trigger_click">
                                
                            </div>
                        </div>
                        <div class="slds-page-header__control">
                            
                        </div>
                        <div class="slds-page-header__control">
             
                        </div>
                        <div class="slds-page-header__control">
                            <ul class="slds-button-group-list">
                                <li>
                                    
                                </li>
                                <li>
                                    
                                </li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <!--Table to display data-->
            <div>
                <table class="slds-table slds-table_cell-buffer slds-table_bordered slds-table_striped"  id= "Print1">
                    <thead>
                        <tr>
                            <th>
                                Name
                            </th>
                            <th>
                                Type
                            </th>
                            <th>
                                Action
                            </th>
                        </tr>
                    </thead>
                    <tbody id= "Print">
                    </tbody>
                    
                </table>
            </div>
            <!--modal popup-->
            <div >
                <div id="ModalId" style="height:640px; display: none;">
                    <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open">
                        <div class="slds-modal__container">
                            <header class="slds-modal__header">
                                <button class="slds-button slds-button_icon slds-modal__close slds-button_icon-inverse" onclick="closeBtnModal()" title="Close">
                                    <svg class="slds-button__icon slds-button__icon_large" aria-hidden="true">
                                        <use xlink:href="{!URLFOR($Asset.SLDS, '/assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
                                    </svg>
                                    <span class="slds-assistive-text">Close</span>
                                </button>
                                <h2 id="modal-heading-01" class="slds-text-heading_medium slds-hyphenate">Create a candidate</h2>
                            </header>
                            <div class="slds-modal__content slds-p-around_medium" id="modal-content-id-1">
                                <div class="slds-grid slds-gutters">
                                    <div class="slds-col slds-size_2-of-3">
                                        <span>Name</span>
                                        <div class="slds-form-element">
                                            <label class="slds-form-element__label" for="text-input-id-1" id="inline-text-label"></label>
                                            <div class="slds-form-element__control">
                                                <input  type="text" id="text-input-id-1" placeholder="Enter Your name" aria-labelledby="inline-text-label" class="slds-input" />
                                                <div class="slds-form-element__help"></div>
                                            </div>
                                        </div>
                                    </div> 
                                    <div class="slds-col slds-size_1-of-3">
                                        <div class="slds-form-element">
                                            <label class="slds-form-element__label" for="select-01">Type</label>
                                            <div class="slds-form-element__control">
                                                <div class="slds-select_container">
                                                    <select class="slds-select" id="select-01">
                                                    </select>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <footer class="slds-modal__footer">
                                <button class="slds-button slds-button_success" id="updateBtn" onclick="updateValues()">Update</button>
                                <button class="slds-button slds-button_success" id="name" onclick="clicking()">Save</button>
                                <button class="slds-button slds-button_neutral" onclick="canceling()">Cancel</button>
                            </footer>
                        </div>
                    </section>
                    <div class="slds-backdrop slds-backdrop_open"></div>
                </div>
            </div>
            
            
            <div id="deleteModal" style="height:640px;display:none;">
                <section role="dialog" tabindex="-1" aria-labelledby="modal-heading-01" aria-modal="true" aria-describedby="modal-content-id-1" class="slds-modal slds-fade-in-open">
                    <div class="slds-modal__container" >
                        <header class="slds-modal__header">
                            <h2 id="modal-heading-01" class="slds-text-heading_medium slds-hyphenate">Deleting Contact</h2>
                        </header>
                        <div class="slds-modal__content slds-p-around_medium" id="modal-content-id-1">
                            <div class="slds-form-element" id="MyForm" style="Text-align:center;">
                                <label class="slds-form-element__label " for="text-input-id-1" >Are You sure?</label>
                            </div>
                        </div>
                        <footer class="slds-modal__footer">
                            <button class="slds-button slds-button_neutral" onclick="hidedelModal()">Cancel</button>
                            <button id="deleteBtn" class="slds-button slds-button_brand" onclick="deletecontact()">Delete</button>
                        </footer>
                    </div>
                </section>
                <div class="slds-backdrop slds-backdrop_open"></div>
            </div>
        </body>
    </html>
</apex:page>





Apex



public class StudentController 

{
    @RemoteAction
    Public static list <candidate__c> getdisplay(){
        list<candidate__c> show = [select name,type__c from candidate__c];
        return show;
        
    } 
    
    @RemoteAction
    public static List<SelectOption> getList()
    {
        List<SelectOption> options = new List<SelectOption>();
        
        Schema.DescribeFieldResult fieldResult = candidate__C.Type__c.getDescribe();
        List<Schema.PicklistEntry> ple = fieldResult.getPicklistValues();
        
        for( Schema.PicklistEntry f : ple)
        {
            options.add(new SelectOption(f.getLabel(), f.getValue()));
        }       
        return options;
    }
    
    @RemoteAction
    Public static list <candidate__c> getdeleteFun(string canId){
        list<candidate__c> deleteFun1 = [select name,type__c from candidate__c where Id=:canId];
        delete deleteFun1;
        return deleteFun1;
    }
    
    @RemoteAction
    Public static candidate__c getupdateFun(string namee,string typee, string id){
        candidate__c edit=[select Name, type__c from candidate__c where id=: id];
        edit.Name=namee;
        edit.type__c=typee;
        update edit;
        return edit;
    }
    @RemoteAction
    public static Boolean getsendingData(string Namee, string Typee){
        boolean response=false;
        candidate__c ras=new candidate__c();
        ras.Name=Namee;
        ras.type__c=Typee;
        try{
            insert ras;
            response=true;
            
        } 
        catch(exception e){
            response=false;
            system.debug('error'+e);
        }
        
        return response;
        
    }
}
